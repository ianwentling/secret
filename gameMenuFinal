import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GameMenu {
    private JFrame frame;
    private JFrame gameFrame;
    private JFrame characterFrame;
    private JLabel difficultyLabel;

    public GameMenu() {
        frame = new JFrame("Game Menu");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 600); // Bigger window
        frame.setLayout(new GridLayout(5, 1));
        frame.setLocationRelativeTo(null);

        frame.getContentPane().setBackground(Color.black);

        Font menuFont = new Font("Minecraft", Font.BOLD, 45); // Bigger font
        Font dFont = new Font("Almost Textual", Font.BOLD, 40); // Bigger font

        difficultyLabel = new JLabel("Select Difficulty", SwingConstants.CENTER);
        difficultyLabel.setForeground(Color.RED);
        difficultyLabel.setFont(dFont);
        frame.add(difficultyLabel);

        JButton easyButton = new JButton("Easy");
        easyButton.setBackground(Color.BLACK);
        easyButton.setForeground(Color.GREEN);
        easyButton.setFont(menuFont);
        easyButton.addActionListener(e -> openEasyMode());
        easyButton.setFocusPainted(false);           // removes blue focus border
        easyButton.setBorderPainted(false);          // disables border painting
        easyButton.setContentAreaFilled(false);
        easyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                easyButton.setForeground(Color.WHITE); // Hover color
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                easyButton.setForeground(Color.GREEN); // Original color
            }
        });
// removes button background fill (optional)


        JButton mediumButton = new JButton("Medium");
        mediumButton.setBackground(Color.BLACK);
        mediumButton.setForeground(Color.YELLOW);
        mediumButton.setFont(menuFont);
        mediumButton.addActionListener(e -> openMediumMode());
        mediumButton.setFocusPainted(false);           // removes blue focus border
        mediumButton.setBorderPainted(false);          // disables border painting
        mediumButton.setContentAreaFilled(false);
        mediumButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mediumButton.setForeground(Color.WHITE);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                mediumButton.setForeground(Color.YELLOW);
            }
        });


        JButton hardButton = new JButton("Hard");
        hardButton.setBackground(Color.BLACK);
        hardButton.setForeground(Color.RED);
        hardButton.setFont(menuFont);
        hardButton.addActionListener(e -> openHardMode());
        hardButton.setFocusPainted(false);           // removes blue focus border
        hardButton.setBorderPainted(false);          // disables border painting
        hardButton.setContentAreaFilled(false);
        hardButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hardButton.setForeground(Color.WHITE);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                hardButton.setForeground(Color.RED);
            }
        });



        JButton characterInfoButton = new JButton("Character Info");
        characterInfoButton.setBackground(Color.BLACK);
        characterInfoButton.setForeground(Color.PINK);
        characterInfoButton.setFont(menuFont);
        characterInfoButton.addActionListener(e -> openCharacterInfo());
        characterInfoButton.setFocusPainted(false);           // removes blue focus border
        characterInfoButton.setBorderPainted(false);          // disables border painting
        characterInfoButton.setContentAreaFilled(false);
        characterInfoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                characterInfoButton.setForeground(Color.WHITE);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                characterInfoButton.setForeground(Color.PINK);
            }
        });

        frame.add(easyButton);
        frame.add(mediumButton);
        frame.add(hardButton);
        frame.add(characterInfoButton);

        frame.setVisible(true);
    }


    private void openEasyMode()
    {
        frame.setVisible(false);// Hides main menu
        new EasyMode().setVisible(true);
    }

    private void openMediumMode()
    {
        frame.setVisible(false);
        new MediumMode().setVisible(true);
    }

    private void openHardMode()
    {

        frame.setVisible(false);
        new HardMode().setVisible(true);
    }

    private void openCharacterInfo() {
        characterFrame = new JFrame("Character Info");
        characterFrame.setSize(500, 500);
        characterFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        characterFrame.setLocationRelativeTo(null); // Centers the window

        JPanel infoPanel = new JPanel();
        infoPanel.setLayout(new BorderLayout());
        infoPanel.add(new JLabel("Character Info Content", SwingConstants.CENTER), BorderLayout.CENTER);

        JButton backButton = new JButton("Back to Menu");
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                characterFrame.dispose();
                frame.setVisible(true);
            }
        });

        infoPanel.add(backButton, BorderLayout.SOUTH);
        characterFrame.add(infoPanel);
        characterFrame.setVisible(true);
        frame.setVisible(false);
    }

    public static void main(String[] args) {
        new GameMenu();
    }
}
